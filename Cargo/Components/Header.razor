@inject IJSRuntime js

<header class="header">
    <Container Class="header__container">
        <Logo Class="header__logo"/>
        <div class=@menuGroupClass @onkeydown="KeyHandler" @onclick="CloseMenu">
            <Menu Class="header__menu"/>
                @ChildContent
        </div>
        <Burger Click="ToggleMenu" Active="@burgerActive" Class="header__burger" OnKeyDown="KeyHandler"/>
    </Container>
</header>

@code {
    private string menuGroupClass = "header__menu-group";
    private bool burgerActive = false;

    [Parameter]
    public RenderFragment? ChildContent { get; set; } 

    private void ToggleMenu()
    {
        if (!menuGroupClass.Contains("open"))
        {
            burgerActive = true;
            menuGroupClass = menuGroupClass.ToggleClass("open");
            ScrollLock();
        }
        else
        {
            burgerActive = false;
            menuGroupClass = menuGroupClass.ToggleClass("open");
            ScrollUnlock();
        }
    }

    public void CloseMenu()
    {
        if (burgerActive)
        {
            burgerActive = false;
            menuGroupClass = menuGroupClass.ToggleClass("open");
            ScrollUnlock();
        }
    }

    private void KeyHandler(KeyboardEventArgs e)
    {
        if (e.Key == "Escape" && burgerActive)
        {
            ToggleMenu();
        }
    }

    private async void ScrollLock()
    {
        await js.InvokeVoidAsync("ScrollLock");
    }

    private async void ScrollUnlock()
    {
        await js.InvokeVoidAsync("ScrollUnlock");
    }
}
